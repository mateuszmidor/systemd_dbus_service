/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.v201512091508.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/com/mateuszmidor/CalcStubDefault.hpp>
#include <assert.h>

namespace v1 {
namespace com {
namespace mateuszmidor {

CalcStubDefault::CalcStubDefault():
        remoteEventHandler_(this),
        interfaceVersion_(Calc::getInterfaceVersion()) {
}

const CommonAPI::Version& CalcStubDefault::getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client) {
    (void)_client;
    return interfaceVersion_;
}

CalcStubRemoteEvent* CalcStubDefault::initStubAdapter(const std::shared_ptr<CalcStubAdapter> &_adapter) {
    CommonAPI::Stub<CalcStubAdapter, CalcStubRemoteEvent>::stubAdapter_ = _adapter;
    return &remoteEventHandler_;
}


void CalcStubDefault::add(const std::shared_ptr<CommonAPI::ClientId> _client, int32_t _a, int32_t _b, addReply_t _reply) {
    (void)_client;
    (void) _a;
    (void) _b;
    int64_t result = 0;
    _reply(result);
}


void CalcStubDefault::fireCalculationDoneEvent(const std::string &_msg) {
    assert((CommonAPI::Stub<CalcStubAdapter, CalcStubRemoteEvent>::stubAdapter_.lock()) !=NULL);
    auto stubAdapter = CommonAPI::Stub<CalcStubAdapter, CalcStubRemoteEvent>::stubAdapter_.lock();
   	if (stubAdapter)
        stubAdapter->fireCalculationDoneEvent(_msg);
}


CalcStubDefault::RemoteEventHandler::RemoteEventHandler(CalcStubDefault *_defaultStub)
    : 
      defaultStub_(_defaultStub) {
}

} // namespace mateuszmidor
} // namespace com
} // namespace v1
