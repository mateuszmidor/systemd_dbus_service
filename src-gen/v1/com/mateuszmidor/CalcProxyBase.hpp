/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.v201512091508.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_COM_MATEUSZMIDOR_Calc_PROXY_BASE_HPP_
#define V1_COM_MATEUSZMIDOR_Calc_PROXY_BASE_HPP_

#include <v1/com/mateuszmidor/Calc.hpp>



#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#endif

#include <vector>

#include <CommonAPI/Event.hpp>
#include <CommonAPI/Proxy.hpp>
#include <functional>
#include <future>

#undef COMMONAPI_INTERNAL_COMPILATION

namespace v1 {
namespace com {
namespace mateuszmidor {

class CalcProxyBase
    : virtual public CommonAPI::Proxy {
public:
    typedef CommonAPI::Event<
        std::string
    > CalculationDoneEvent;

    typedef std::function<void(const CommonAPI::CallStatus&, const int64_t&)> AddAsyncCallback;


    virtual CalculationDoneEvent& getCalculationDoneEvent() = 0;

    virtual void add(const int32_t &_a, const int32_t &_b, CommonAPI::CallStatus &_internalCallStatus, int64_t &_result, const CommonAPI::CallInfo *_info = nullptr) = 0;
    virtual std::future<CommonAPI::CallStatus> addAsync(const int32_t &_a, const int32_t &_b, AddAsyncCallback _callback = nullptr, const CommonAPI::CallInfo *_info = nullptr) = 0;
};

} // namespace mateuszmidor
} // namespace com
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_COM_MATEUSZMIDOR_Calc_PROXY_BASE_HPP_
