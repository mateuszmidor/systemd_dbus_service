/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.5.v201512091508.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#ifndef V1_COM_MATEUSZMIDOR_Calc_STUB_DEFAULT_HPP_
#define V1_COM_MATEUSZMIDOR_Calc_STUB_DEFAULT_HPP_


#include <v1/com/mateuszmidor/CalcStub.hpp>
#include <sstream>

namespace v1 {
namespace com {
namespace mateuszmidor {

/**
 * Provides a default implementation for CalcStubRemoteEvent and
 * CalcStub. Method callbacks have an empty implementation,
 * remote set calls on attributes will always change the value of the attribute
 * to the one received.
 *
 * Override this stub if you only want to provide a subset of the functionality
 * that would be defined for this service, and/or if you do not need any non-default
 * behaviour.
 */
class CalcStubDefault
    : public virtual CalcStub {
public:
    CalcStubDefault();

    CalcStubRemoteEvent* initStubAdapter(const std::shared_ptr<CalcStubAdapter> &_adapter);

    const CommonAPI::Version& getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client);


    virtual void add(const std::shared_ptr<CommonAPI::ClientId> _client, int32_t _a, int32_t _b, addReply_t _reply);

virtual void fireCalculationDoneEvent(const std::string &_msg);


protected:
    class RemoteEventHandler: public virtual CalcStubRemoteEvent {
    public:
        RemoteEventHandler(CalcStubDefault *_defaultStub);


    private:
        CalcStubDefault *defaultStub_;
    };
private:
    CalcStubDefault::RemoteEventHandler remoteEventHandler_;


    CommonAPI::Version interfaceVersion_;
};

} // namespace mateuszmidor
} // namespace com
} // namespace v1


// Compatibility
namespace v1_0 = v1;

#endif // V1_COM_MATEUSZMIDOR_Calc_STUB_DEFAULT
