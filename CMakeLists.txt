cmake_minimum_required (VERSION 3.2)
project (systemd_dbus_service_demo)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")


# setup directory paths for short
set(COMMONAPI_DIR "${PROJECT_SOURCE_DIR}/CommonAPI")
set(SRC-GEN_DIR "${PROJECT_SOURCE_DIR}/src-gen")


# the below files are generated by "generate_c++_from_franca.sh"
set(GENERATED_SOURCES
    ${SRC-GEN_DIR}/v1/commonapi/CalcServiceStubDefault.cpp
    ${SRC-GEN_DIR}/v1/commonapi/CalcServiceDBusProxy.cpp
    ${SRC-GEN_DIR}/v1/commonapi/CalcServiceDBusDeployment.cpp
    ${SRC-GEN_DIR}/v1/commonapi/CalcServiceDBusStubAdapter.cpp
)


# add c++ source-from-francaIDL generating step
add_custom_command(
    OUTPUT ${GENERATED_SOURCES}
    DEPENDS fidl/CalcService.fidl
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
    COMMAND sh ${PROJECT_SOURCE_DIR}/generate_c++_from_franca.sh 
    COMMENT "Generating CommonAPI sources from FrancaIDL"
)
 

# make a library out of generated sources; client and service will both use that
add_library(src-gen STATIC ${GENERATED_SOURCES})

target_include_directories(src-gen
                            PUBLIC
                                ${SRC-GEN_DIR}
                                ${COMMONAPI_DIR}/dbus-1.8.20
                                ${COMMONAPI_DIR}/common-api-runtime/include
                                ${COMMONAPI_DIR}/common-api-dbus-runtime/include
)
  
link_directories(
    ${COMMONAPI_DIR}/common-api-runtime/build
    ${COMMONAPI_DIR}/common-api-dbus-runtime/build
    ${COMMONAPI_DIR}/dbus-1.8.20/dbus/.libs
)
 
target_link_libraries(src-gen
                         PUBLIC
                            dbus-1
                            CommonAPI
                            CommonAPI-DBus
)

# tell the linker to include whole archive not just the actually used code
# this is needed as commonapi uses ugly gcc trick __attribute__ ((constructor)) for autoinitialization
# and that would normally not be included in the binary
SET(src-gen-whole-archive -Wl,--whole-archive src-gen -Wl,--no-whole-archive)


# add Client target
add_executable(CalcClient
    src/Client.cpp   
)

target_link_libraries(CalcClient ${src-gen-whole-archive})


# add Service target
add_executable(CalcService
    src/Service.cpp
    src/CalcServiceImpl.cpp
)

target_link_libraries(CalcService ${src-gen-whole-archive})


# install the systemd service and its dependencies
install(TARGETS CalcService
        RUNTIME DESTINATION /usr/local/bin
        PERMISSIONS OWNER_EXECUTE GROUP_EXECUTE WORLD_EXECUTE
)

install(FILES ${COMMONAPI_DIR}/common-api-runtime/build/libCommonAPI.so
        DESTINATION /usr/lib
)

install(FILES systemd/Calc.service
        DESTINATION /etc/systemd/system
)
