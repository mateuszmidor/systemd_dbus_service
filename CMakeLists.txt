cmake_minimum_required (VERSION 3.2)
project (systemd_dbus_service_demo)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")


# setup directory paths for short
set(COMMONAPI_DIR "${PROJECT_SOURCE_DIR}/CommonAPI")
set(SRC-GEN_DIR "${PROJECT_SOURCE_DIR}/src-gen")


# the below files are generated by "generate_c++_from_franca.sh"
set(GENERATED_SOURCES
    ${SRC-GEN_DIR}/v1_0/commonapi/CalcServiceStubDefault.cpp
    ${SRC-GEN_DIR}/v1_0/commonapi/CalcServiceDBusProxy.cpp
    ${SRC-GEN_DIR}/v1_0/commonapi/CalcServiceDBusDeployment.cpp
    ${SRC-GEN_DIR}/v1_0/commonapi/CalcServiceDBusStubAdapter.cpp
)


# add source generator step
add_custom_command(
    OUTPUT ${GENERATED_SOURCES}
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
    DEPENDS fidl/CalcService.fidl
    COMMENT "Generating CommonAPI sources from FrancaIDL"
    COMMAND sh ${PROJECT_SOURCE_DIR}/generate_c++_from_franca.sh 
)
 

# make a common library from the generated source; client and service will both use that 
add_library(src-gen STATIC ${GENERATED_SOURCES})

target_include_directories(src-gen
                            PUBLIC
                                ${SRC-GEN_DIR}
                                ${COMMONAPI_DIR}/dbus-1.8.20
                                ${COMMONAPI_DIR}/common-api-runtime/include
                                ${COMMONAPI_DIR}/common-api-dbus-runtime/include
)
  
link_directories(
    ${COMMONAPI_DIR}/common-api-runtime/build
    ${COMMONAPI_DIR}/common-api-dbus-runtime/build
    ${COMMONAPI_DIR}/dbus-1.8.20/dbus/.libs
)
 
target_link_libraries(src-gen CommonAPI CommonAPI-DBus dbus-1)
 
 
# add Client target
add_executable(CalcClient
    src/Client.cpp
)
target_link_libraries(CalcClient src-gen)
 
 
# add Service target
add_executable(CalcService
    src/Service.cpp
    src/CalcServiceImpl.cpp
)
target_link_libraries(CalcService src-gen)